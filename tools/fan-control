#!/usr/bin/env bash
set -o pipefail

source /etc/tinybox-release

# echo to stderr
function ercho {
  # see if -n was passed
  if [ "$1" == "-n" ]; then
    shift
    printf "%s" "$*" >&2;
  else
    printf "%s\n" "$*" >&2;
  fi
}

function main {
  local mode="$1"
  if [ -z "$mode" ]; then
    ercho "Mode not provided"
    ercho "Valid modes: auto, manual, gpuauto, gpumanual"
    ercho "               auto) set case fan speeds automatically"
    ercho "     manual <speed>) set case fan speeds manually"
    ercho "            gpuauto) set gpu fan speeds automatically"
    ercho "  gpumanual <speed>) set gpu fan speeds manually"
    exit 1
  fi
  case "$mode" in
    auto)
      # set case fan speeds
      ipmitool raw 0x3a 0xd8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0
      ;;
    manual)
      local fan_speed="$2"
      if [ -z "$fan_speed" ]; then
        ercho "Fan speed not provided"
        exit 1
      fi
      if ((fan_speed < 20 || fan_speed > 100)); then
        ercho "Invalid fan speed: $fan_speed"
        ercho "Valid range: 20-100"
        exit 1
      fi

      # set case fan speeds
      local fan_speed_hex
      fan_speed_hex=$(printf "%02x" "$fan_speed")
      ipmitool raw 0x3a 0xd8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1
      ipmitool raw 0x3a 0xd6 $(printf "0x$fan_speed_hex %.0s" {1..16})
      ;;
    gpuauto)
      # set gpu fan speeds
      if [[ "$TINYBOX_COLOR" == "green" ]]; then
        /opt/tinybox/build/venv/bin/python3 -c "
from pynvml import *; nvmlInit(); handles = [nvmlDeviceGetHandleByIndex(i) for i in range(nvmlDeviceGetCount())];
list(map(lambda h: [nvmlDeviceSetDefaultFanSpeed_v2(h, i) for i in range(nvmlDeviceGetNumFans(h))], handles))
"
      elif [[ "$TINYBOX_COLOR" == "red" ]]; then
        ercho "warn: requires amdgpu.ppfeaturemask=0xffffffff"
        echo r | tee /sys/class/drm/card*/device/hwmon/hwmon*/device/gpu_od/fan_ctrl/fan_minimum_pwm > /dev/null
        echo c | tee /sys/class/drm/card*/device/hwmon/hwmon*/device/gpu_od/fan_ctrl/fan_minimum_pwm > /dev/null
      else
        echo "Unknown tinybox color: $TINYBOX_COLOR"
        exit 1
      fi
      ;;
    gpumanual)
      local fan_speed="$2"
      if [ -z "$fan_speed" ]; then
        ercho "Fan speed not provided"
        exit 1
      fi
      if ((fan_speed < 20 || fan_speed > 100)); then
        ercho "Invalid fan speed: $fan_speed"
        ercho "Valid range: 20-100"
        exit 1
      fi

      # set gpu fan speeds
      if [[ "$TINYBOX_COLOR" == "green" ]]; then
        /opt/tinybox/build/venv/bin/python3 -c "
from pynvml import *; nvmlInit(); handles = [nvmlDeviceGetHandleByIndex(i) for i in range(nvmlDeviceGetCount())];
list(map(lambda h: [nvmlDeviceSetFanSpeed_v2(h, i, $fan_speed) for i in range(nvmlDeviceGetNumFans(h))], handles))
"
      elif [[ "$TINYBOX_COLOR" == "red" ]]; then
        ercho "warn: requires amdgpu.ppfeaturemask=0xffffffff"
        echo "$fan_speed" | tee /sys/class/drm/card*/device/hwmon/hwmon*/device/gpu_od/fan_ctrl/fan_minimum_pwm > /dev/null
        echo c | tee /sys/class/drm/card*/device/hwmon/hwmon*/device/gpu_od/fan_ctrl/fan_minimum_pwm > /dev/null
      else
        echo "Unknown tinybox color: $TINYBOX_COLOR"
        exit 1
      fi
      ;;
    *)
      ercho "Invalid mode: $mode"
      ercho "Valid modes: auto, manual, gpuauto, gpumanual"
      ercho "               auto) set case fan speeds automatically"
      ercho "     manual <speed>) set case fan speeds manually"
      ercho "            gpuauto) set gpu fan speeds automatically"
      ercho "  gpumanual <speed>) set gpu fan speeds manually"
      exit 1
      ;;
  esac
}

# check sudo
if [ "$(id -u)" -ne 0 ]; then
  ercho "Please run as root"
  exit 1
fi

main "$@"
